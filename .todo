TODO: Split on pages
TODO: spinner should take template (to avoid error due to lack of data)
TODO: Confirmation to delete
TODO: AWS
TODO: block save/show tooltip when no title in new note, add BE validation too
TODO: one .gitignore
TODO "start": "ts-node -r tsconfig-paths/register src/main.ts", checck if tsconfig is required
TODO: block button when is waiting on response
TODO: check on edge

TODO: maybe use @mdi/js (to not load all unused icons)
TODO: global scss variables https://github.com/angular/angular-cli/issues/1253

// css in ts
TODO: https://github.com/just-jeb/angular-builders/tree/master/packages/custom-webpack#custom-webpack-config-object
TODO: https://medium.com/angular-in-depth/angular-cli-under-the-hood-builders-demystified-v2-e73ee0f2d811?
TODO: https://medium.com/angular-in-depth/customizing-angular-cli-build-an-alternative-to-ng-eject-v2-c655768b48cc

// for test
store.reset(myNewStateObject) will reset the entire state to the passed argument without firing any actions or life-cycle events.

// actions like [Toast Api] should be done by store
// authorization and interceptor also to store
https://www.ngxs.io/community/projects

// Toast (positioning, animations, dynamic content) https://blog.angularindepth.com/creating-a-toast-service-with-angular-cdk-a0d35fd8cc12

https://github.com/gothinkster/angular-realworld-example-app
modules and utilities https://github.com/golevelup/nestjs
NODE_PATH is an environment variable node uses for pretty much the same purpose TypeScript uses “baseUrl”: it looks for additional node_modules inside the directory specified by NODE_PATH
TODO: create *d.ts files instead of *ts in API (investigation) @types package?
TODO: one package.json for all projects (investigation)
TODO: check vs code workspaces (debugger config and recommended extensions)
TODO: create md notes https://www.npmjs.com/package/markdown-loader
TODO: public directory
TODO: swaggerConfig.json
TODO: google analytics
TODO: distict server for FE
TODO: possibility to remove note from singe-note view

// authentication
TODO: password should be hashed (like bcrypt library)
TODO: don't use === for checking password
TODO: rate limiting
TODO: banner email not confirmed
TODO: check implementation with auth0-js @auth0/angular-jwt instead of @auth0/auth0-spa-js, more: https://auth0.com/blog/full-stack-typescript-apps-part-2-developing-frontend-angular-apps

TODO: alt + click - insert cursor (double clik to select word)

// ngrx
TODO: https://medium.com/swlh/ngrx-data-will-change-your-life-8528736e4fc0


// security
https://nvd.nist.gov/
https://cve.mitre.org/
https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP
https://www.owasp.org

db
https://aws.amazon.com/dynamodb/
TODO SSL connection do db


// other
https://foalts.gitbook.io // framework

// npm-run-all np. "dev": "npm-run-all --parallel start server"
// TODO .env file



